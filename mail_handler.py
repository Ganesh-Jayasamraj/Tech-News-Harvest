import requests
from bs4 import BeautifulSoup
from datetime import date
from mailer import send_email

news_platforms = {
    "gadgets_now": "https://www.gadgetsnow.com/tech-news",
    "gadgets_360": "https://gadgets360.com/news",
    "indian_express": "https://indianexpress.com/section/technology/",
    "bbc": "https://www.bbc.com/news/technology"
}

for key in news_platforms.keys():
    try:
        if key == "gadgets_now":
            gadgets_now = requests.get(news_platforms[key])
            print(f'Platform = '+key + ' : ' +
                  ' response_code = ' + str(gadgets_now.status_code))
        elif key == "gadgets_360":
            gadgets_360 = requests.get(news_platforms[key])
            print(f'Platform = '+key + ' : ' +
                  ' response_code = ' + str(gadgets_360.status_code))
        elif key == "indian_express":
            indian_express = requests.get(news_platforms[key])
            print(f'Platform = '+key + ' : ' + ' response_code = ' +
                  str(indian_express.status_code))
        elif key == "bbc":
            bbc = requests.get(news_platforms[key])
            print(f'Platform = '+key + ' : ' +
                  ' response_code = ' + str(bbc.status_code))

    except requests.exceptions as exp:
        print("Exception: ", exp)

page_responses = {}
page_responses.update({'gadgets_now': gadgets_now})
page_responses.update({'gadgets_360': gadgets_360})
page_responses.update({'indian_express': indian_express})
page_responses.update({'bbc': bbc})


print(page_responses)
todate = date.today()
todate = todate.strftime("%d/%m/%y")


content = ""
content += f'''
<!DOCTYPE html>
<html>
<head>
    <title>Tech-Mail</title>
    <meta charset='UTF-8'>
    <meta name="description" content="Tech News Headlines Stack">
    <meta name="author" content="generated-by-mailer">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width , initial-scale=1.0">
</head>

<body>
    <header class="page-header">
        <h3 class="header">The Stack of Tech News (Headlines) from multiple news providing platforms.</h3>
        <h3> Date : {todate}
    </header>
    <main class="main-content">
    <div class="outer-body wrapper">
        <div class="inner-body wrapper">
            <div class="tech-news container"> \n
'''

if "indian_express" in page_responses:
    soup = BeautifulSoup(page_responses['indian_express'].text, 'html.parser')
    filtered_soup = soup.find('ul', {"class": "article-list"})
    content += str(filtered_soup)

if "gadgets_360" in page_responses:
    soup = BeautifulSoup(page_responses['gadgets_360'].text, 'html.parser')
    filtered_soup = soup.find_all('div', {"class": "caption_box"})
    content += str(filtered_soup)
content += '''
</div>
        </div>
    </div>
    </main>
    <footer class="page-footer">
        <p> This Page is <span>automatically</span> generated by an script</p>
    </footer>
</body>
</html>

'''

with open("./Generated_Files/News-Stack.html", 'w') as out_file:
    out_file.write(content)
    out_file.close()

send_email()


print("Execution Finished")
